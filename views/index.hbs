<div id="divModal"></div>
<table class="table" id="divTable">
    <thead>
        <tr>
            <th scope="col">Sensor</th>
            <th scope="col">Wine</th>
            <th scope="col">Temperature</th>
            <th scope="col">Humidity</th>
            <th scope="col">Lux</th>
            <th scope="col">Timestamp</th>
        </tr>
    </thead>
</table>

<hr>

<div style="width: 50%; float:left;"><h2>Temperature</h2><canvas id="sensor_temp"></canvas></div>
<div style="width: 50%; float:right;"><h2>Humidity</h2><canvas id="sensor_hum"></canvas></div>
<script src="chart.js/dist/chart.umd.js"></script>
<script>

    const iconX = `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#FF0000" class="bi bi-x" viewBox="0 0 16 16">
  <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708"/>
</svg>`;

    const iconV = `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#00FF00" class="bi bi-check" viewBox="0 0 16 16">
  <path d="M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425z"/>
</svg>`;

    const labels = [];
    
    
    const divTable = document.getElementById("divTable");

    let socket = new WebSocket('ws://127.0.0.1:9369','echo-protocol');

    socket.onmessage = function(event) {
        location.reload();
    };

    (async function(){
        let lastValue = await fetch('/lastValue');
        lastValue = await lastValue.json();
        lastValue = JSON.parse(lastValue.info);
        console.log(lastValue)
        for (const sensor of lastValue){
            let strModal = '';

            strTable = `<tr><th scope="row">${sensor.id_sensor}</th>`;
            strTable += `<td>${sensor.name}</td>`;

            if(sensor.temperature < sensor.t_temperature -1 || sensor.temperature > sensor.t_temperature + 1){
                strModal += `Temperature: ${sensor.temperature}`;
                strTable += '<td>'+iconX+'</td>';
            }else
                strTable += '<td>'+iconV+'</td>';
                
            if(sensor.humidity < sensor.t_humidity-3 || sensor.humidity > sensor.t_humidity+3){
                strModal += ` Humidity: ${sensor.humidity}`;
                strTable += '<td>'+iconX+'</td>';
            }else
                strTable += '<td>'+iconV+'</td>';
                
            if(sensor.lux > sensor.t_lux){
                strModal += ` Lux: ${sensor.lux}`;
                strTable += '<td>'+iconX+'</td>';
            }else
                strTable += '<td>'+iconV+'</td>';

            if(strModal.length != '')
                document.getElementById('divModal').innerHTML+= `<div class="alert alert-danger" role="alert">Sensor ${sensor.id_sensor}: ${strModal}</div>`;
            
            let date = new Date(sensor.timestamp);
            strTable += '<td>'+`${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`+'</td>'
            strTable += `</tr>`;
            divTable.innerHTML += strTable;
            
            
            if(sensor.id_sensor == 1){
                    let color = '00FF00';
                    if(strModal.length != '')
                        color = 'FF0000';
                    fetch('/ledColor',{
                    method: 'POST',
                    headers: {
                        "Content-type": "application/json; charset=UTF-8"
                    },
                    body: JSON.stringify({
                        color
                    })
                })
            }
        }
    })();

    (async function(){
        let data = await fetch('/getDataGroupHour');
        data = await data.json();
        data = JSON.parse(data.info)
        console.log({data})

        let temp = [];
        let hum = [];
        let lux = [];
        const color = ['rgb(75, 192, 192)','rgb(255, 192, 192)'];
        const dataTemp = [];
        const dataHum = [];
        const dataLux = [];
        let strTable = "";

        for(const value in data){     
            let date = new Date(data[value].timestamp);
            if (!labels.includes(`${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`))
                labels.push(`${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`);
            temp.push(data[value].AVG_TEMP);
            hum.push(data[value].AVG_HUM);            

            if(parseInt(value)+1 == data.length || data[parseInt(value)+1].id_sensor > data[value].id_sensor){

                dataTemp.push({
                    label: `Sensor ${data[value].id_sensor}`,
                    data: temp,
                    fill: false,
                    borderColor: color[data[value].id_sensor-1],
                    tension: 0.1
                });
                dataHum.push({
                    label: `Sensor ${data[value].id_sensor}`,
                    data: hum,
                    fill: false,
                    borderColor: color[data[value].id_sensor-1],
                    tension: 0.1
                });
                temp = [];
                hum = [];

            }

        }    
        new Chart(
            document.getElementById('sensor_temp'),{
            type: 'line',
            data: {
                labels: labels,
                datasets: dataTemp
            }
            }
        );
        new Chart(
            document.getElementById('sensor_hum'),{
            type: 'line',
            data: {
                labels: labels,
                datasets: dataHum
            }
            }
        );
    })();
</script>